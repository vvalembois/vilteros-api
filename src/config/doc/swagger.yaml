swagger: "2.0"
info:
  title: Vilteros Api
  description: "This is a sample server vilteros server. You will find here a list of resources to create small applications for your personal projects."
  version: 1.0.0
  contact:
    email: "34096840+vvalembois@users.noreply.github.com"

schemes:
  - https

tags:
  - name: "Albums"
    description: "Everything about your albums resources"
  - name: "Interns"
    description: "Everything about your interns resources"
  - name: "Games"
    description: "Everything about your games resources"
  - name: "Pokemons"
    description: "Everything about your pokemons resources"
  - name: "Articles"
    description: "Everything about your articles resources"
  - name: "Series"
    description: "Everything about your series resources"  
  - name: "Discussions"
    description: "Everything about your discussions resources"

paths:
  /albums:
    get:
      tags:
        - "Albums"
      summary: Returns a list of albums.
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Album"
        500:
          description: Internal Server Error
  /albums/{albumId}:
    get:
      tags:
        - "Albums"
      summary: Returns a album by ID.
      parameters:
        - in: path
          name: albumId
          required: true
          type: integer
          minimum: 1
          maximum: 1
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Album"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /interns:
    get:
      tags:
        - "Interns"
      summary: Returns a list of interns information.
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
        500:
          description: Internal Server Error
  /interns/{internId}:
    get:
      tags:
        - "Interns"
      summary: Returns a information intern by ID.
      parameters:
        - in: path
          name: internId
          required: true
          type: integer
          minimum: 1
          maximum: 1
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /games:
    get:
      tags:
        - "Games"
      summary: Returns a list of video games.
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Game"
        500:
          description: Internal Server Error
  /games/{gameId}:
    get:
      tags:
        - "Games"
      summary: Returns a information game by ID.
      parameters:
        - in: path
          name: gameId
          required: true
          type: integer
          minimum: 1
          maximum: 1
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Game"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /pokemons:
    get:
      tags:
        - "Pokemons"
      summary: Returns a list of pokemons.
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pokemon"
        500:
          description: Internal Server Error
  /pokemons/{pokemonId}:
    get:
      tags:
        - "Pokemons"
      summary: Returns a information pokemon by ID.
      parameters:
        - in: path
          name: pokemonId
          required: true
          type: integer
          minimum: 1
          maximum: 1
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Pokemon"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /shop:
    get:
      tags:
        - "Articles"
      summary: Returns a shop.
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Shop"
        500:
          description: Internal Server Error
  /articles:
    get:
      tags:
        - "Articles"
      summary: Returns a list of Articles.
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Articles"
        500:
          description: Internal Server Error
  /articles/{articleId}:
    get:
      tags:
        - "Articles"
      summary: Returns a information article by ID.
      parameters:
        - in: path
          name: articleId
          required: true
          type: integer
          minimum: 1
          maximum: 1
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Article"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /series:
    get:
      tags:
        - "Series"
      summary: Returns a list of series.
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Name of the person making the API call
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Serie"
        500:
          description: Internal Server Error
  /series/{serieId}:
    get:
      tags:
        - "Series"
      summary: Returns a information serie by ID.
      parameters:
        - in: path
          name: serieId
          required: true
          type: integer
          minimum: 1
          maximum: 1
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Serie"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /discussions:
      get:
        tags:
          - "Discussions"
        summary: Returns discussions.
        produces:
          - application/json
        parameters:
          - in: query
            name: from
            schema:
              type: string
            description: Name of the person making the API call
        responses:
          200:
            description: OK
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Discussion"
          500:
            description: Internal Server Error
  
  /discussions-interface:
      get:
        tags:
          - "Discussions"
        summary: Returns discussions interface for web.
        produces:
          - text/html
        parameters:
          - in: query
            name: from
            schema:
              type: string
            description: Name of the person making the API call
        responses:
          200:
            description: OK
            schema:
              type: "html"
          400:
            description: Bad Request
            schema:
              type: "html"

definitions:
  Album:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      artist:
        type: "string"
      year:
        type: "string"
      music:
        type: "array"
        items:
          type: "string"

  Contact:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstname:
        type: "string"
      lastname:
        type: "string"
      school:
        type: "string"
      latitude:
        type: "number"
        format: "float"
      longitude:
        type: "number"
        format: "float"
      mail: 
        type: "string"
      phone: 
        type: "string"

  Game:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      note:
        type: "string"
      synopsis:
        type: "string"

  Pokemon:
    type: "object"
    properties:
      id:
        type: "string"
      ndex:
        type: "string"
      species:
        type: "string"
      forme:
        type: "string"
      type1:
        type: "string"
      type2:
        type: "string"
      ability1:
        type: "string"
      ability2:
        type: "string"
      abilityH:
        type: "string"
      hp:
        type: "string"
      attack:
        type: "string"
      defense:
        type: "string"
      spattack:
        type: "string"
      spdefense:
        type: "string"
      speed:
        type: "string"
      total:
        type: "string"
      weight:
        type: "string"
      height:
        type: "string"
      percentmale:
        type: "string"
      percentfemale:
        type: "string"
      preevolution:
        type: "string"
      egggroup1:
        type: "string"
      egggroup2:
        type: "string"

  Article:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      prix:
        type: "number"
        format: "float"
      marque:
        type: "string"
      content:
        type: "string"

  Shop:
    type: "object"
    properties:
      first_article:
        $ref: "#/definitions/Article"
      second_artcile:
        $ref: "#/definitions/Article"
      articles:
        type: "array"
        items:
          $ref: "#/definitions/Article"

  Serie:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      creationDate:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      type:
        type: "string"
      thumbnailUrl:
        type: "string"

  Discussion:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      confidential:
        type: "boolean"
      music:
        type: "array"
        items:
          $ref: "#/definitions/Message"

  Message:
    type: "object"
    properties:
      discussionId: 
        type: "integer"
        format: "int64"
      author:  
        type: "string"
      message: 
        type: "String"
      date: 
        type: "date"